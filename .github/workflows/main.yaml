# This is the config file for our actions
# GitHub Actions lets you specify WHAT happens WHEN a certain event is triggered
# You can also specify on what VM / instance it runs on (default being ubuntu / linux)

# Name of the workflow
name: Git Actions Demo
# What triggers this workflow run
on: [push]

# Global var
env: 
  NAME: Reece
  SECRET_PASSWORD: ${{ secrets.secret_password }} 
  # Creating a variable called SECRET_PASSWORD
  # Within Github add a secret called secret_password

# What jobs are part of this workflow
jobs:
  # What is the name of this job
  Actions_demo:
    # What type of instance is our job running on 
    runs-on: ubuntu-latest
    # What are we doing as part of our workflow
    steps:
      # Run is just running an sh command in our ubuntu machine
    - run: ls 
    - run: pwd
    - run: "echo 'Hello World!'"

    # Run a command to get our files on that machine 
    # - run: git clone <git url> 
    - name: Check out repo
      uses: actions/checkout@v3 # Pre build official github action to checkout a repo 
    
    - run: ls

    # Environment variables, public (name of a service) or private (password for logging in) 
    # Global env vars these are declared OUTSIDE of the jobs: and available everywhere
    # Job specific vars which are available to that job
    # Step specific vars which are accessible to a single step
  env_job: 
    runs-on: ubuntu-latest
    # Job specific var
    env: 
      COLOUR: Purple
    steps:
    - run: echo "$NAME favourite colour is $COLOUR"
    - name: Print out Step Var
      run: echo "$GREETING"
      env: 
        GREETING: "Hello!"
    - run: echo "$SECRET_PASSWORD"
  
  build_job:
    runs-on: ubuntu-latest
    steps:
    - name: Check out repo
      uses: actions/checkout@v3
    - run: chmod +x buildScript.sh # Adding executable permissions to this file
    - run: ./buildScript.sh
    - run: ls

  

# Exercise 
# Create a .github/workflows directory in your project and create a workflow that checks out your repo, makes a new file and lists all of the contents

# Exercise
# Add a global, job and step var to work with echo / run commands
# Add Build, Test, Deploy jobs to your project that use scripts and do atleast 4 of the following commands per script:
# - add new file
# - remove files / directories
# - make directory
# - move files
# - prints out the current location (pwd)
# - prints out the current user (whoami)
# - adds a line of text to an existing file
# - simple if else statement using another function 
# - prints out all of the files in a repo
# - pushes a file to a different repo